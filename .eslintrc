{
  'parser': 'babel-eslint',
  'rules': {
    'strict': 0, // this is from the babel-eslint setup
    'array-bracket-spacing': ['error', 'never'],
    'arrow-body-style': 'off',
    'class-methods-use-this': 'off',
    'comma-dangle': ['error', 'never'],
    'func-names': 'off',
    'function-paren-newline': ['error', 'consistent'],
    'guard-for-in': 'off',
    'import/extensions': ['off', 'never'],
    'import/no-extraneous-dependencies': 'off',
    'import/no-unresolved': 'off',
    // indentation of 2 spaces, and specific indentation for stacked variable declarations and switch/case statements
    'indent': ['error', 2, {
      'VariableDeclarator': 2,
      'SwitchCase': 1
    }],
    'jsx-a11y/anchor-is-valid': 'warn',
    'jsx-a11y/click-events-have-key-events': 'warn',
    'jsx-a11y/label-has-for': 'warn',
    'jsx-a11y/mouse-events-have-key-events': 'warn',
    'jsx-a11y/no-noninteractive-element-interactions': 'warn',
    'jsx-a11y/no-static-element-interactions': 'warn',
    'jsx-quotes': ['error', 'prefer-single'],
    'linebreak-style': ['error', 'unix'], // line breaks for unix based systems
    'max-len': ['error', 120],
    'max-params': ['error', 5],
    'multiline-ternary': ['error', 'never'],
    'no-param-reassign': ['error', { 'props': false }],
    'no-plusplus': ['error', { 'allowForLoopAfterthoughts': true }],
    'no-restricted-syntax': 'off',
    'no-trailing-spaces': ['error'],
    'no-underscore-dangle': 'off',
    'no-use-before-define': ['error', { 'functions': false, 'classes': false }],
    'one-var': 'off',
    'one-var-declaration-per-line': 'off',
    'prefer-const': ['error', {'destructuring': 'any'}],
    'prefer-destructuring': ['error', {
      'VariableDeclarator': {
        'array': false,
        'object': true
      },
      'AssignmentExpression': {
        'array': false,
        'object': false
      }
    }],
    // disabling this as sometimes it is useful to have a single line:
    "react/jsx-one-expression-per-line": 0,
    // disabling this one as it is not always necessary:
    "react/destructuring-assignment": 0,
    // disabling this one as it appears inconsistent/buggy:
    "react/no-this-in-sfc": 0,
    'react/jsx-curly-spacing': ['error', 'always'],
    'react/jsx-filename-extension': 'off',
    // Limit maximum of props on a single line in JSX
    'react/jsx-max-props-per-line': ['error', { 'maximum': 2 }],
    // this stops errors when React is imported but does not appear to be used because of JSX compilation
    'react/jsx-uses-react': 'warn',
    'react/jsx-uses-vars': 'warn',
    // Prevent missing parentheses around multilines JSX
    'react/jsx-wrap-multilines': ['error', {
      declaration: 'parens-new-line',
      assignment: 'parens-new-line',
      return: 'parens-new-line',
      arrow: 'parens-new-line',
      condition: 'parens-new-line',
      logical: 'parens-new-line',
      prop: 'parens-new-line'
    }],
    'react/forbid-prop-types': 'off',
    'react/no-array-index-key': 'warn',
    'react/require-default-props': 'off',
    'react/sort-comp': ['error', {
      order: [
        'static-methods',
        'lifecycle',
        '/^on.+$/',
        '/^(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
        'everything-else',
        '/^render.+$/',
        'render'
      ],
    }],
    'semi': ['error', 'always'], // enable semi-colons
    'semi-spacing': ['error', {'before': false, 'after': true}], // enable semi-colon spacing
    'space-before-function-paren': 'off'
  },
  'env': {
    'es6': true,
    'browser': true,
    'jasmine': true
  },
  'extends': [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:class-extends/recommended',
    'airbnb'
  ],
  'plugins': [
    'class-extends',
    'react'
  ]
}
